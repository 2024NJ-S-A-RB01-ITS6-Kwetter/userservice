name: Java CI with Gradle and SonarCloud

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
      - name: Set execute permissions
        run: chmod +x gradlew
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
      - name: Run Tests
        run: ./gradlew test

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4.0.0

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
      - name: Run SonarQube Analysis
        run: ./gradlew build jacocoTestReport sonarqube --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build,test,sonarqube]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR with Gradle
        run: ./gradlew clean build

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t bwildeman/kwetter_user_service:latest -t bwildeman/kwetter_user_service:${{ github.sha }} .

      - name: Push Docker Image with SHA Tag
        run: docker push bwildeman/kwetter_user_service:${{ github.sha }}

      - name: Push Docker Image with Latest Tag
        run: docker push bwildeman/kwetter_user_service:latest
        
    
  Deployment:
    name: Azure deployment
    runs-on: ubuntu-latest
    needs: [build,test,sonarqube,docker]
    steps:
      - name: Install Azure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Azure Login with Service Principal
        run: az login --service-principal -u "${{secrets.AZURE_CLIENT_ID}}" -p "${{secrets.AZURE_CLIENT_SECRET}}" --tenant "${{secrets.AZURE_TENANT_ID}}"

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group individual-project_group --name individual-project --overwrite-existing
        
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./userservice/deployment/
